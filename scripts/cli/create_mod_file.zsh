# -----------------------------------------------------------------------------
# create_mod_file ‚Äî create a new mod file inside a module directory
# -----------------------------------------------------------------------------
create_mod_file() {
  # Ensure FORGE_ROOT and current crate are set
  if [[ -z "$FORGE_ROOT" ]]; then
    echo "‚ùå FORGE_ROOT is not set. Please export it before using create_mod_file."
    return 1
  fi

  if [[ -z "$FORGE_CURRENT_CRATE" ]]; then
    echo "‚ö†Ô∏è  No current crate view is set. Use 'forge_view <crate>' first."
    return 1
  fi

  # Parse args
  local mod_name=""
  local mod_dir=""
  while [[ $# -gt 0 ]]; do
    case "$1" in
      --mod_name)
        mod_name="$2"
        shift 2
        ;;
      --mod_dir)
        mod_dir="$2"
        shift 2
        ;;
      *)
        echo "‚ùå Unknown argument: $1"
        echo "Usage: create_mod_file --mod_name <name> --mod_dir <dir>"
        return 1
        ;;
    esac
  done

  # Validate args
  if [[ -z "$mod_name" || -z "$mod_dir" ]]; then
    echo "‚ùå Missing required arguments."
    echo "Usage: create_mod_file --mod_name <name> --mod_dir <dir>"
    return 1
  fi

  # Define paths
  local crate_dir="$FORGE_ROOT/crates/$FORGE_CURRENT_CRATE"
  local src_dir="$crate_dir/src"
  local target_dir="$src_dir/$mod_dir"
  local mod_file="$target_dir/$mod_name.rs"
  local mod_rs="$target_dir/mod.rs"

  echo "‚öôÔ∏è  Creating mod file '$mod_name.rs' inside module '$mod_dir'"
  echo "üì¶ Crate: $FORGE_CURRENT_CRATE"
  echo "------------------------------------------"

  # Validate directories
  if [[ ! -d "$target_dir" ]]; then
    echo "‚ùå Module directory not found: $target_dir"
    return 1
  fi

  if [[ ! -f "$mod_rs" ]]; then
    echo "‚ùå mod.rs not found in: $target_dir"
    return 1
  fi

  # Create file if missing
  if [[ -f "$mod_file" ]]; then
    echo "‚ÑπÔ∏è  File already exists: $mod_file"
  else
    cat <<EOF > "$mod_file"
//! Module: $mod_name
//! Parent: $mod_dir
//! Auto-generated by create_mod_file CLI.

pub fn init() {
    println!("Initialized $mod_dir::$mod_name()");
}
EOF
    echo "‚úÖ Created mod file: $mod_file"
  fi

  # Add mod declaration if missing
  if grep -q "^pub mod $mod_name;" "$mod_rs"; then
    echo "‚ÑπÔ∏è  Module '$mod_name' already declared in $mod_rs"
  else
    echo "pub mod $mod_name;" >> "$mod_rs"
    echo "‚úÖ Added declaration to $mod_rs"
  fi

  echo "------------------------------------------"
  echo "üéâ Module file '$mod_name.rs' created successfully!"
  echo "üìú Path: $mod_file"
}
