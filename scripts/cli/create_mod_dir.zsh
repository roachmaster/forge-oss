# -----------------------------------------------------------------------------
# create_mod_dir ‚Äî create a new module directory (with mod.rs) in the current crate
# -----------------------------------------------------------------------------
create_mod_dir() {
  # Ensure FORGE_ROOT is set
  if [[ -z "$FORGE_ROOT" ]]; then
    echo "‚ùå FORGE_ROOT is not set. Please export it before using create_mod_dir."
    return 1
  fi

  # Ensure a current crate is selected
  if [[ -z "$FORGE_CURRENT_CRATE" ]]; then
    echo "‚ö†Ô∏è  No current crate view is set. Use 'forge_view <crate>' first."
    return 1
  fi

  # Parse arguments
  local mod_name=""
  while [[ $# -gt 0 ]]; do
    case "$1" in
      --mod)
        mod_name="$2"
        shift 2
        ;;
      *)
        echo "‚ùå Unknown argument: $1"
        echo "Usage: create_mod_dir --mod <mod_name>"
        return 1
        ;;
    esac
  done

  if [[ -z "$mod_name" ]]; then
    echo "‚ùå Missing module name. Usage: create_mod_dir --mod <mod_name>"
    return 1
  fi

  # Define key paths
  local crate_dir="$FORGE_ROOT/crates/$FORGE_CURRENT_CRATE"
  local src_dir="$crate_dir/src"
  local mod_dir="$src_dir/$mod_name"
  local mod_file="$mod_dir/mod.rs"
  local lib_file="$src_dir/lib.rs"

  echo "‚öôÔ∏è  Creating module '$mod_name' in crate: $FORGE_CURRENT_CRATE"
  echo "üìÅ Crate path: $crate_dir"
  echo "------------------------------------------"

  # Ensure src exists
  if [[ ! -d "$src_dir" ]]; then
    echo "‚ùå Source directory not found: $src_dir"
    return 1
  fi

  # Create directory if needed
  if [[ -d "$mod_dir" ]]; then
    echo "‚ÑπÔ∏è  Directory already exists: $mod_dir"
  else
    mkdir -p "$mod_dir"
    echo "‚úÖ Created directory: $mod_dir"
  fi

  # Create mod.rs file if missing
  if [[ -f "$mod_file" ]]; then
    echo "‚ÑπÔ∏è  mod.rs already exists: $mod_file"
  else
    cat <<EOF > "$mod_file"
//! Module: $mod_name
//! Auto-generated by create_mod_dir CLI.
//! Add your module-specific code here.

pub fn init() {
    println!("Initialized module: $mod_name");
}
EOF
    echo "‚úÖ Created file: $mod_file"
  fi

  # Ensure lib.rs exists
  if [[ ! -f "$lib_file" ]]; then
    echo "‚ùå lib.rs not found: $lib_file"
    return 1
  fi

  # Add mod declaration if missing
  if grep -q "^pub mod $mod_name;" "$lib_file"; then
    echo "‚ÑπÔ∏è  Module '$mod_name' already declared in lib.rs"
  else
    echo "pub mod $mod_name;" >> "$lib_file"
    echo "‚úÖ Added mod declaration to lib.rs"
  fi

  echo "------------------------------------------"
  echo "üéâ Module '$mod_name' created successfully!"
  echo "üìÇ Directory: $mod_dir"
  echo "üìú File: $mod_file"
}
