//! {{payload.description}}: {{payload.name_PascalCase}}
//! Auto-generated by forge-template.
//!
//! Kind: {{payload.kind_SCREAMING_SNAKE_CASE}}
//! Generated from {{header.file}} using template {{header.template}}
//!
//! -----------------------------------------------------------------------------
//! ⚙️  This file was generated automatically.
//! Do not edit directly — edit `context.yaml` or `mod.mustache` instead.
//! -----------------------------------------------------------------------------

// -----------------------------------------------------------------------------
// Submodules
// -----------------------------------------------------------------------------
{{#payload.mods}}
/// Submodule: {{value_PascalCase}}
pub mod {{value_snake_case}};
{{/payload.mods}}

// -----------------------------------------------------------------------------
// Exports
// -----------------------------------------------------------------------------
{{#payload.exports}}
{{#doc}}/// {{doc}}{{/doc}}
pub use {{mod_snake_case}}::{{path_PascalCase}}{{#hasNext}};{{/hasNext}}{{^hasNext}};{{/hasNext}}
{{/payload.exports}}

// -----------------------------------------------------------------------------
// Type Summary
// -----------------------------------------------------------------------------
#[allow(dead_code)]
pub fn describe_{{payload.name_snake_case}}() {
    println!("🧩 Component: {{payload.name_PascalCase}}");
    println!("📜 Description: {{payload.description}}");
    println!("🔖 Kind: {{payload.kind_PascalCase}}");
    println!("---");
    println!("Modules:");
    {{#payload.mods}}
    println!(" - {{value_PascalCase}} (snake: {{value_snake_case}})");
    {{/payload.mods}}
    println!("Exports:");
    {{#payload.exports}}
    println!(" - {{mod_PascalCase}} -> {{path_PascalCase}}");
    {{/payload.exports}}
    println!("---");
    println!("Source: {{header.file}}  |  Template: {{header.template}}");
}
